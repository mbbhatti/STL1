<!DOCTYPE html>

{% set rtlLanguages = ['ar'] %}
{% set locale = crudlex_sessionGet('locale', 'en') %}
{% set localeToFlag = {'en': 'gb', 'de': 'de', 'el': 'gr'} %}
{% set localeDir = locale in rtlLanguages ? ' dir="rtl" ' : '' %}

{% if is_granted('ROLE_ADMIN') %}
    {% set config = {
    'shown' : ["user", "suggestion","market","market_group" ],
    'readwrite' : ["user", "suggestion","market","market_group", "form","media" ],
    'read' : []
    } %}
{% else %}
    {% set config = {
    'shown' : ["user", "suggestion","market","market_group" ],
    'readwrite' : ["media", "suggestion", "form" ],
    'read' : ["market","market_group" ]
    } %}
{% endif %}

<html{{ localeDir|raw }}>
    <head>
        <title>CRUDlex</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        {% include '@crud/header.twig' %}

        {% block stylesheets %}
            <link href="{{ asset('css/app.css') }}" rel="stylesheet" />
            <link href="{{ asset('css/magnific-popup.css') }}" rel="stylesheet" />
            <style type="text/css">
                .flag {
                    background: url('{{ crud.generateURL('crudStatic', {file: 'images/flags/flags.png'}) }}') no-repeat;
                }
                @font-face {
                    font-family: 'Glyphicons Halflings';
                    src: url('{{ crud.generateURL('crudStatic', {file: 'fonts/vendor/bootstrap/glyphicons-halflings-regular.eot'}) }}');
                    src: url('{{ crud.generateURL('crudStatic', {file: 'fonts/vendor/bootstrap/glyphicons-halflings-regular.eot?'}) }}#iefix') format('embedded-opentype'), url('{{ crud.generateURL('crudStatic', {file: 'fonts/vendor/bootstrap/glyphicons-halflings-regular.woff'}) }}') format('woff'), url('{{ crud.generateURL('crudStatic', {file: 'fonts/vendor/bootstrap/glyphicons-halflings-regular.ttf'}) }}') format('truetype'), url('{{ crud.generateURL('crudStatic', {file: 'fonts/vendor/bootstrap/glyphicons-halflings-regular.svg'}) }}#glyphicons_halflingsregular') format('svg');
                }
            </style>
        {% endblock %}

        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
        <![endif]-->
    </head>
    <body>
        <div id="crudPage{{ crudEntity is defined ? crudEntity : '' }}">
            {% if app.session.flashBag is defined %}
                {% set flashTypeAvailable = [ 'success', 'danger'] %}
                {% for flashType in flashTypeAvailable %}
                    {% for flash in crudlex_sessionFlashBagGet(flashType) %}
                        <div class="alert alert-{{ flashType }}" >
                            <button class="close" data-dismiss="alert">Ã—</button>
                            {{ flash }}
                        </div>
                    {% endfor %}
                {% endfor %}
            {% endif %}

            <nav class="navbar navbar-default navbar-fixed-top" role="navigation">
                <div class="container">
                    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                        {%  include "posHeader.twig" %}
                    </div>
                </div>
            </nav>

            <div class="container" id="posContent">
                {% block content %}{% endblock %}
            </div>

            {% include '@crud/footer.twig' %}

            <script type="text/javascript">
                {% block js %}
                    $(function() {
                        $('#selectall').click(selectallClick);
                        $('#delete-batch').click(batchOperation);
                    });

                    function selectallClick(e) {
                        selectall(event.target.checked);
                    }
                    function selectall(select) {
                        $( "input.batch" ).each(function() {
                            $(this).prop("checked", select);
                        });
                    }
                    {% if crudEntity  %}
                        function batchOperation() {
                            let elems = $(".batch:checked");
                            let ids = elems.map(function () {
                                return this.value;
                            }).get();

                            let size = elems.size();
                            let message = 'Are you sure to DELETE ';
                            if (size === 0) {
                                alert('No row selected');
                                return;
                            } else if (size === 1) {
                                message += ' the selected row?';
                            } else {
                                message += ' those ' + size + ' rows?';
                            }
                            let areYouSure = confirm(message);

                            if (areYouSure) {
                                let url = encodeURI("{{ crud.generateURL('batchDelete', {'entity': crudEntity}) }}?ids=[" + ids + "]");
                                $.post(url, {}, function () {
                                    window.location.reload();
                                    window.scrollTo(0, 0);
                                });
                            }
                        }
                    {% endif %}
                {% endblock %}
            </script>
        </div>
        {% block delayedJs %}{% endblock %}
    </body>
</html>
